class v{constructor(e){this.canvas=e,this.keys=new Set,this.mouse={x:0,y:0,pressed:!1,justClicked:!1},this.touch={x:0,y:0,active:!1,identifier:null},this.gamepad=null,this.canvasScale=1,this.canvasOffsetX=0,this.canvasOffsetY=0,this.preventedKeys=new Set(["F1","F5","F11","F12"]),this.bindEvents()}updateCanvasScale(e){this.canvasScale=e}updateCanvasPosition(e,t){this.canvasOffsetX=e,this.canvasOffsetY=t}bindEvents(){document.addEventListener("keydown",e=>this.handleKeyDown(e)),document.addEventListener("keyup",e=>this.handleKeyUp(e)),this.canvas.addEventListener("mousemove",e=>this.handleMouseMove(e)),this.canvas.addEventListener("mousedown",e=>this.handleMouseDown(e)),this.canvas.addEventListener("mouseup",e=>this.handleMouseUp(e)),this.canvas.addEventListener("contextmenu",e=>e.preventDefault()),this.canvas.addEventListener("touchstart",e=>this.handleTouchStart(e)),this.canvas.addEventListener("touchmove",e=>this.handleTouchMove(e)),this.canvas.addEventListener("touchend",e=>this.handleTouchEnd(e)),this.canvas.addEventListener("touchcancel",e=>this.handleTouchEnd(e)),window.addEventListener("gamepadconnected",e=>this.handleGamepadConnected(e)),window.addEventListener("gamepaddisconnected",e=>this.handleGamepadDisconnected(e)),window.addEventListener("blur",()=>this.reset())}handleKeyDown(e){this.preventedKeys.has(e.code)&&e.preventDefault(),this.keys.add(e.code)}handleKeyUp(e){this.keys.delete(e.code)}handleMouseMove(e){const t=this.canvas.getBoundingClientRect(),s=e.clientX-t.left,i=e.clientY-t.top;this.mouse.x=s/t.width*this.canvas.width,this.mouse.y=i/t.height*this.canvas.height}handleMouseDown(e){e.button===0&&(this.mouse.pressed=!0,this.mouse.justClicked=!0,e.preventDefault())}handleMouseUp(e){e.button===0&&(this.mouse.pressed=!1)}handleTouchStart(e){if(e.preventDefault(),e.touches.length>0){const t=e.touches[0],s=this.canvas.getBoundingClientRect(),i=t.clientX-s.left,a=t.clientY-s.top;this.touch.x=i/s.width*this.canvas.width,this.touch.y=a/s.height*this.canvas.height,this.touch.active=!0,this.touch.identifier=t.identifier,this.mouse.x=this.touch.x,this.mouse.y=this.touch.y,this.mouse.pressed=!0,this.mouse.justClicked=!0}}handleTouchMove(e){e.preventDefault();for(let t=0;t<e.touches.length;t++){const s=e.touches[t];if(s.identifier===this.touch.identifier){const i=this.canvas.getBoundingClientRect(),a=s.clientX-i.left,n=s.clientY-i.top;this.touch.x=a/i.width*this.canvas.width,this.touch.y=n/i.height*this.canvas.height,this.mouse.x=this.touch.x,this.mouse.y=this.touch.y;break}}}handleTouchEnd(e){e.preventDefault();for(let t=0;t<e.changedTouches.length;t++)if(e.changedTouches[t].identifier===this.touch.identifier){this.touch.active=!1,this.touch.identifier=null,this.mouse.pressed=!1;break}}handleGamepadConnected(e){console.log("Gamepad connected:",e.gamepad.id),this.gamepad=e.gamepad}handleGamepadDisconnected(e){console.log("Gamepad disconnected:",e.gamepad.id),this.gamepad&&this.gamepad.index===e.gamepad.index&&(this.gamepad=null)}getMovementInput(){const e={x:0,y:0};if((this.keys.has("KeyW")||this.keys.has("ArrowUp"))&&(e.y-=1),(this.keys.has("KeyS")||this.keys.has("ArrowDown"))&&(e.y+=1),(this.keys.has("KeyA")||this.keys.has("ArrowLeft"))&&(e.x-=1),(this.keys.has("KeyD")||this.keys.has("ArrowRight"))&&(e.x+=1),this.gamepad){const s=navigator.getGamepads()[this.gamepad.index];if(s){const a=s.axes[0],n=s.axes[1];Math.abs(a)>.2&&(e.x+=a),Math.abs(n)>.2&&(e.y+=n),s.buttons[12].pressed&&(e.y-=1),s.buttons[13].pressed&&(e.y+=1),s.buttons[14].pressed&&(e.x-=1),s.buttons[15].pressed&&(e.x+=1)}}if(this.touch.active){const t=this.canvas.width/2,s=this.canvas.height/2,i=this.touch.x-t,a=this.touch.y-s,n=Math.sqrt(i*i+a*a);n>50&&(e.x=i/n,e.y=a/n)}return e}isKeyPressed(e){return this.keys.has(e)}isMousePressed(){if(this.gamepad){const t=navigator.getGamepads()[this.gamepad.index];if(t&&t.buttons[0].pressed)return!0}return this.mouse.pressed}getMousePosition(){return{x:this.mouse.x,y:this.mouse.y}}update(){if(this.gamepad){const t=navigator.getGamepads()[this.gamepad.index];if(t){const s=t.axes[2],i=t.axes[3],a=.2;if(Math.abs(s)>a||Math.abs(i)>a){const n=this.canvas.width/2,h=this.canvas.height/2;this.mouse.x=n+s*200,this.mouse.y=h+i*200}t.buttons[7].pressed||t.buttons[0].pressed?this.mouse.pressed=!0:this.touch.active||(this.mouse.pressed=!1)}}this.mouse.justClicked=!1}reset(){this.keys.clear(),this.mouse.pressed=!1,this.mouse.justClicked=!1,this.touch.active=!1}checkLevelUpCardClick(e){if(!this.mouse.justClicked||!e.levelingSystem)return-1;const t=e.levelingSystem.getAvailableUpgrades();if(t.length===0)return-1;const s=this.canvas.width/2,i=this.canvas.height/2,a=180,n=140,h=20,u=a*3+h*2,r=s-u/2,d=i-40;for(let o=0;o<t.length;o++){const c=r+(a+h)*o;if(this.mouse.x>=c&&this.mouse.x<=c+a&&this.mouse.y>=d&&this.mouse.y<=d+n)return o}return-1}}export{v as InputManager};
